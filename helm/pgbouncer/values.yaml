# Default values for pgbouncer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

enabled: true
replicaCount: 1

image:
  repository: edoburu/pgbouncer
  pullPolicy: IfNotPresent
  versionOverride: "*"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
environmentVariables: {}

initContainers:
  - name: pgbouncer-init
    image: busybox
    command: ["sh", "-c", "addgroup -S psqlgroup && adduser -S -G psqlgroup admin"]
    securityContext:
      runAsUser: 0
      privileged: true

config:
  deployment:
    # command: ["sh", "-c", "cp /etc/pgbouncer_temp/* /etc/pgbouncer/ && /entrypoint.sh /usr/bin/pgbouncer /etc/pgbouncer/pgbouncer.ini"]
    command: ["sh", "-c", "cp /etc/pgbouncer_temp/* /etc/pgbouncer/ && exec /usr/bin/pgbouncer /etc/pgbouncer/pgbouncer.ini"]
  # Set password to md5 hash of "admin" for user "admin" as such:
  # md5passwordhash="md5$(echo -n "${DB_PASSWORD}${DB_USER}" | md5sum | cut -f 1 -d ' ')"
  # echo $md5passwordhash
  users:
    - username: admin
      password: md5f6fdffe48c908deb0f4c3bd36c032e72
  init: 
    enabled: true
    content: |
      ################## pgbouncer.ini ##################
      [databases]
      * = host=postgres port=5432 dbname=postgres

      [pgbouncer]
      listen_addr = 0.0.0.0
      listen_port = 5432
      unix_socket_dir =
      user = admin
      auth_file = /etc/pgbouncer/userlist.txt
      auth_type = md5
      # auth_user = admin
      pool_mode = transaction
      max_client_conn = 8000
      default_pool_size = 5
      min_pool_size = 0
      reserve_pool_size = 100
      reserve_pool_timeout = 20
      max_db_connections = 0
      ignore_startup_parameters = extra_float_digits
      max_prepared_statements = 2000

      # Log settings
      admin_users = admin

      # Connection sanity checks, timeouts

      # TLS settings

      # Dangerous timeouts
      ################## end file ##################

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5432
  annotations: {}
  headless:
    annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  hosts:
    - host: pgbouncer.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: pgbouncer-tls
  #    hosts:
  #      - pgbouncer.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

tests:
  enabled: true

livenessProbe:
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1
  command:
    - pg_isready
    - -h
    - localhost
    - -U
    - admin

readinessProbe:
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1
  command:
    - pg_isready
    - -h
    - localhost
    - -U
    - admin
